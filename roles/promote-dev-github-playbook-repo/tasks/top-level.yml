---
- name: "Check to see if the rquirements.yml file in {{ prod_playbook_repo }} exist"
  uri:
    url:            "https://{{ dev_github_fqdn }}/repos/{{ dev_github_org }}/{{ dev_playbook_repo }}/contents?ref={{ dev_playbook_tag }}"
    method:         GET
    validate_certs: false
    status_code:    200,404
    headers:
      authorization:  "Bearer {{ dev_github_personal_token }}"
  #no_log:           true
  register:         tl_dev_names

- debug:
    var: tl_dev_names
  when: (insecure_debug_logging | bool)

- set_fact:
    tl_dev_list: "{{ tl_dev_names | json_query(query970) }}"
  vars:
    query970:         "json[?size > `0`].name"

- uri:
    url:            "https://{{ dev_github_fqdn }}/repos/{{ dev_github_org }}/{{ dev_playbook_repo }}/contents/{{ item }}?ref={{ dev_playbook_tag }}"
    method:         GET
    validate_certs: false
    status_code:    200,404
    headers:
      authorization:  "Bearer {{ dev_github_personal_token }}"
  no_log:           true
  register:         tl_dev_cont
  loop:             "{{ tl_dev_list }}"

- debug:
    var: github_req_response
  when: (insecure_debug_logging | bool)

- debug:
    var: tl_dev_cont.results

- set_fact:
    tl_dev_cont_list: "{{ tl_dev_cont.results | json_query(query771) }}"
  vars:               
    query771:         "[?json.content].json.content"

 
- uri:
    url:            "https://{{ prod_github_fqdn }}/repos/{{ prod_github_org }}/{{ prod_playbook_repo }}/contents?ref={{ prod_playbook_tag }}"
    method:         GET
    validate_certs: false
    status_code:    200,404
    headers:
      authorization:  "Bearer {{ prod_github_personal_token }}"
  #no_log:           true
  register:         tl_prod_names

- debug:
    var: tl_prod_names
  when: (insecure_debug_logging | bool)

- set_fact:
    tl_prod_sha_list: "{{ tl_prod_names | json_query(query972) }}"
  vars:
    query972:         "json[?size > `0`].sha"

- uri:
     url:              "https://{{ prod_github_fqdn }}/repos/{{ prod_github_org }}/{{ prod_playbook_repo }}/contents/{{ item.0 }}?ref={{ prod_playbook_tag }}"
     method:           PUT
     status_code:      201,200
     validate_certs:   false
     body_format:      json
     validate_certs:   false
     headers:
       authorization:  "Bearer {{ prod_github_personal_token }}"
     body:
       message:        "This was created by Ansible "
       committer:
         name:         "{{ prod_github_username }}"
         email:        "{{ email }}"
       sha:            "{{ item.1 }}"
       content:        "{{ item.2 }}"
  #no_log:             true
  with_together:               
    - "{{ tl_dev_list }}"
    - "{{ tl_prod_sha_list }}"
    - "{{ tl_dev_cont_list }}" 
  register:           put_response
